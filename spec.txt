-- Instructions --
internal(name: ident, code: i32)     -- Gets the builtin VM function of the provided name.
external(name: ident, lib: str)      -- Gets the external function of the provided name and in the provided library.

push(item: lit)    :: 0x01           -- Push a literal onto the stack.
pop()              :: 0x02           -- Pop the top value off the stack.

set(name: str, value: ident)         -- Set a local of the given name to the provided value.
    :: 0x03

call(name: ident)                    -- Call the provided function.
    :: 0x10 -- If a standard call.
    :: 0x11 -- If an internal call.
    :: 0x12 -- If an external call.

-- Locals --
Locals are present in both KASM and KiraVM. However, KASM stores them with their provided name,
whereas KiraVM stores them as 32-bit integer IDs.

Locals are dynamically types and can be of any literal value.

Example:
.local test # Stored as "test" in KASM; might be stored as 0 in KiraVM.
set test "This is a test."
set test 25
set test 100.2

-- VM Internals --
0x01(value: lit)                     -- Print the provided literal.
0x02(value: lit)                     -- Print the provided literal with an additional new-line.

-- Calling Convention --
Arguments are pushed onto the stack in L-to-R ordering.
Functions should push their return value onto the stack before returning.

-- Kira Format --
Little-endian

[KIRA in ascii]
[Number of locals (i32)]
[Number of strings (i32)]
    for s in strings
        [s length (i32)]
        [s bytes (i8; utf-8)]
[Length of program in bytes (i64)]
[Program]

